---
jobs:
  include:
    - stage: Build

      language: node_js
      node_js: 15
      services:
        - docker
      before_install:
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
        - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
        - sudo systemctl restart docker
      script:
        - npm run format
        - npm run style
        - npm test
        - npm run build
        - ./remove_hash_from_asset.js "$(make version)"
        - git --no-pager diff && git diff --quiet
        - curl -q -sSL --max-time 30 "https://raw.githubusercontent.com/ViBiOh/scripts/master/bootstrap" | bash -s "release"
        - echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
        - DOCKER_IMAGE="${DOCKER_USER}/$(make name)-ui" IMAGE_VERSION="$(make version)" DOCKERFILE=Dockerfile_ui ./scripts/release docker

    - stage: Build

      language: go
      go: 1.15
      services:
        - docker
      before_install:
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
        - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
        - sudo systemctl restart docker
      script:
        - make
        - git --no-pager diff -- ':(exclude)go.sum' && git diff --quiet -- ':(exclude)go.sum'
        - curl -q -sSL --max-time 30 "https://raw.githubusercontent.com/ViBiOh/scripts/master/bootstrap" | bash -s "release"
        - echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
        - DOCKER_IMAGE="${DOCKER_USER}/$(make name)-api" IMAGE_VERSION="$(make version)" DOCKERFILE=Dockerfile_api ./scripts/release build docker
      after_success:
        - bash <(curl -s https://codecov.io/bash)

    - stage: Publish

      language: minimal
      script:
        - curl -q -sSL --max-time 30 "https://raw.githubusercontent.com/ViBiOh/scripts/master/bootstrap" | bash -s "docker_promote"
        - scripts/docker_promote "${DOCKER_USER}/herodote-api" "$(make version)"
        - scripts/docker_promote "${DOCKER_USER}/herodote-ui" "$(make version)"

stages:
  - Build
  - name: Publish
    if: branch = master && type = push

notifications:
  email: false
